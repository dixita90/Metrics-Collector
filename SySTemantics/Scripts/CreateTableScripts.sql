
/*This table maintains information about all the processes that run in the 
system.
*/

CREATE TABLE IF NOT EXISTS tblProcessInfo 
(PI_ID INTEGER PRIMARY KEY, 
 PI_PID INTEGER,
 PI_USERNAME VARCHAR2, 
 PI_PRIORITY VARCHAR2, 
 PI_NICE INTEGER, 
 PI_VIRTUAL INTEGER, 
 PI_RES VARCHAR2, 
 PI_SHARED INTEGER, 
 PI_STATUS VARCHAR2, 
 PI_PERCTCPUUSAGE LONG, 
 PI_PERCTMEMUSAGE LONG, 
 PI_TIME VARCHAR2, 
 PI_COMMAND VARCHAR2,
 PI_DATE Varchar2);

/*This table maintains information about the system memory.
*/

CREATE TABLE tblMemoryInfo(
MI_TOTALMEMORY LONG,
MI_USEDMEMORY LONG,
MI_ACTIVEMEMORY LONG,
MI_INACTIVEMEMORY LONG,
MI_BUFFERMEMORY LONG,
MI_SWAPCACHE LONG,
MI_TOTALSWAP LONG,
MI_SWAPUSED LONG,
MI_SYSTEMCPUTICKS LONG,
MI_IDLECPUTICKS LONG,
MI_IOWAITCPUTICKS LONG,
MI_PAGESPAGEDIN LONG,
MI_PAGESPAGEDOUT LONG,
MI_PAGESSWAPPEDIN LONG,
MI_PAGESSWAPPEDOUT LONG,
MI_INTERRUPTS LONG,
MI_CPUCONTEXTSWITCHES,
MI_BOOTTIME LONG);

/*This table maintains information about the network bandwidth used 
by the process. */


CREATE TABLE IF NOT EXISTS tblNetworkInfo(
NI_ID INTEGER PRIMARY KEY,
NI_PID INTEGER,
NI_PROTOCOL VARCHAR2,
NI_USER VARCHAR2,
NI_PROGRAM VARCHAR2,
NI_BWSENT LONG,
NI_BWRECEIVED LONG,
NI_STATUS VARCHAR2,
NI_DATE VARCHAR2);

CREATE TABLE IF NOT EXISTS tblFreeMemory(
FM_ID INTEGER PRIMARY KEY,
FM_NAME VARCHAR2,
FM_TOTAL INTEGER,
FM_USED INTEGER,
FM_SHARED INTEGER,
FM_BUFFCACHE  INTEGER,
FM_AVAILABLE INTEGER,
FM_DATE Varchar2);


CREATE TABLE IF NOT EXISTS tblVMStat(
VM_ID INTEGER PRIMARY KEY,
VM_PROCESS_WAIT_TIME INTEGER,
VM_PROCESS_IO_WAIT_TIME INTEGER,
VM_SWPDOUT INTEGER,
VM_FREE INTEGER,
VM_BUFFER  INTEGER,
VM_CACHE INTEGER,
VM_OSSWAPIN INTEGER,
VM_OSSWAPOUT INTEGER,
VM_BLOCKREAD INTEGER,
VM_BLOCKWRITE INTEGER,
VM_INTERRUPTS INTEGER,
VM_CONTXTSWITCHES INTEGER,
VM_CPUNONKERNALMODE INTEGER,
VM_CPUKERNALMODE INTEGER,
VM_CPUIDELTIME INTEGER,
VM_CPUWAITIO INTEGER,
VM_TIMESTOLENVM INTEGER,
VM_DATE VARCHAR2);


CREATE TABLE IF NOT EXISTS tblVMStatDisk(
VM_DISKNAME VARCHAR2,
VM_TOTALREADS INTEGER,
VM_MERGEDREADS INTEGER,
VM_SECTORSREADS INTEGER,
VM_MSREADS INTEGER,
VM_TOATALWRITES INTEGER,
VM_MERGEDWRITES INTEGER,
VM_SECTORWRITES INTEGER,
VM_MSWRITES INTEGER,
VM_CUR INTEGER,
VM_SEC INTEGER,
VM_DATE VARCHAR2);

CREATE TABLE IF NOT EXISTS tblIOStats(
IO_DISKNAME VARCHAR2,
IO_TRANSFERPERSEC LONG,
IO_KB_READS LONG,
IO_KB_WRITES LONG,
IO_TOTALBLOCKSREAD LONG,
IO_TOATALBLOCKSWRITES LONG,
IO_DATE VARCHAR2);



/*This table maintains information about all the processes that run in the 
system.
*/

CREATE TABLE IF NOT EXISTS tblProcessInfoHistory 
(PI_ID INTEGER PRIMARY KEY, 
 PI_PID INTEGER,
 PI_USERNAME VARCHAR2, 
 PI_PRIORITY VARCHAR2, 
 PI_NICE INTEGER, 
 PI_VIRTUAL INTEGER, 
 PI_RES VARCHAR2, 
 PI_SHARED INTEGER, 
 PI_STATUS VARCHAR2, 
 PI_PERCTCPUUSAGE LONG, 
 PI_PERCTMEMUSAGE LONG, 
 PI_TIME VARCHAR2, 
 PI_COMMAND VARCHAR2);


/*This table maintains information about the network bandwidth used 
by the process. */


CREATE TABLE IF NOT EXISTS tblNetworkInfoHistory(
NI_ID INTEGER PRIMARY KEY,
NI_PID INTEGER,
NI_PROTOCOL VARCHAR2,
NI_USER VARCHAR2,
NI_PROGRAM VARCHAR2,
NI_BWSENT LONG,
NI_BWRECEIVED LONG,
NI_STATUS VARCHAR2);

CREATE TABLE IF NOT EXISTS tblFreeMemoryHistory(
FM_ID INTEGER PRIMARY KEY,
FM_NAME VARCHAR2,
FM_TOTAL INTEGER,
FM_USED INTEGER,
FM_SHARED INTEGER,
FM_BUFFCACHE  INTEGER,
FM_AVAILABLE INTEGER);


CREATE TABLE IF NOT EXISTS tblVMStatHistory(
VM_ID INTEGER PRIMARY KEY,
VM_PROCESS_WAIT_TIME INTEGER,
VM_PROCESS_IO_WAIT_TIME INTEGER,
VM_SWPDOUT INTEGER,
VM_FREE INTEGER,
VM_BUFFER  INTEGER,
VM_CACHE INTEGER,
VM_OSSWAPIN INTEGER,
VM_OSSWAPOUT INTEGER,
VM_BLOCKREAD INTEGER,
VM_BLOCKWRITE INTEGER,
VM_INTERRUPTS INTEGER,
VM_CONTXTSWITCHES INTEGER,
VM_CPUNONKERNALMODE INTEGER,
VM_CPUKERNALMODE INTEGER,
VM_CPUIDELTIME INTEGER,
VM_CPUWAITIO INTEGER,
VM_TIMESTOLENVM INTEGER);


CREATE TABLE IF NOT EXISTS tblVMStatDiskHistory(
VM_DISKNAME VARCHAR,
VM_TOTALREADS INTEGER,
VM_MERGEDREADS INTEGER,
VM_SECTORSREADS INTEGER,
VM_MSREADS INTEGER,
VM_TOATALWRITES INTEGER,
VM_MERGEDWRITES INTEGER,
VM_SECTORWRITES INTEGER,
VM_MSWRITES INTEGER,
VM_CUR INTEGER,
VM_SEC INTEGER);

CREATE TABLE IF NOT EXISTS tblIOStatsHistory(
IO_DISKNAME VARCHAR,
IO_TRANSFERPERSEC LONG,
IO_KB_READS LONG,
IO_KB_WRITES LONG,
IO_TOTALBLOCKSREAD LONG,
IO_TOATALBLOCKSWRITES LONG);